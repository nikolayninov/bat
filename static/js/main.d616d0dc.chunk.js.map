{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","basename","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d616d0dc.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useEffect, useState } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return auth.currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return auth.currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Signup = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        }\r\n        catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account?<Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Dashboard = () => {\r\n    const [error, setError] = useState('')\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch {\r\n            setError('Failed to log out')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\"> Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email: </strong>{currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Login = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        }\r\n        catch {\r\n            setError('Failed to sign in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\"> Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password??</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const { currentUser } = useAuth()\r\n    return (\r\n        <Route {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }\r\n        catch {\r\n            setError('Failed to reset password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\"> Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\"> Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ForgotPassword;","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst UpdateProfile = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to update account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n        try {\r\n            history.push('/')\r\n        }\r\n        catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UpdateProfile;","import React from 'react'\nimport Signup from './Signup'\nimport { Container } from 'react-bootstrap'\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Dashboard from './Dashboard'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile'\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router basename=\"/\">\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}